# -*- mode: ruby -*-
# vi: set ft=ruby :

# test that puppet is installed as a Vagrant plugin
# you can't use ``Vagrant.has_plugin?("puppet")`` because Vagrant's built-in
# Puppet Provisioner provides a plugin named "puppet", so this always evaluates to true.
begin
  gem "puppet", ">=3.8"
rescue Gem::LoadError
  raise "puppet is not installed in vagrant gems! please run 'vagrant plugin install puppet'"
end

nodes = [
  { :hostname => 'vdc1web01',:ip => '192.168.137.3', :box => 'ubuntu/trusty64' },
  { :hostname => 'vdc1db01', :ip => '192.168.137.4', :box => 'ubuntu/trusty64' },
  { :hostname => 'vdc2db01', :ip => '192.168.137.5', :box => 'ubuntu/trusty64' },
]

Vagrant.configure(2) do |config|

  config.puppet_install.puppet_version = "3.8.6"
  config.vm.box = "ubuntu/trusty64"
  config.vm.hostname = "puppetmaster.localdomain"
  config.vm.network "private_network", ip: "192.168.137.2", virtualbox__intnet: true

  # r10k plugin to deploy puppet modules
  config.r10k.puppet_dir = "puppet"
  config.r10k.puppetfile_path = "puppet/Puppetfile"
  config.r10k.module_path = "puppet/vendor"

  # Provision the machine with the appliction
  config.vm.provision "puppet" do |puppet|
    puppet.manifests_path = "puppet/manifests"
    puppet.manifest_file  = "default.pp"
    puppet.module_path = ["puppet/modules", "puppet/vendor"]
  end

  nodes.each do |node|
    config.vm.define node[:hostname] do |nodeconfig|
      nodeconfig.vm.box = "ubuntu/trusty64"
      nodeconfig.vm.hostname = node[:hostname] + ".box"
      nodeconfig.vm.network :private_network, ip: node[:ip]

      memory = node[:ram] ? node[:ram] : 256;
      nodeconfig.vm.provider :virtualbox do |vb|
        vb.customize [
          "modifyvm", :id,
          "--cpuexecutioncap", "50",
          "--memory", memory.to_s,
        ]
      end
    end
  end

end
